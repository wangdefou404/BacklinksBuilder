---
// User subscription status component
export interface Props {
  userId: string;
}

const { userId } = Astro.props;

// Get user subscription information
let subscriptionData = null;
let subscriptionError = null;

if (userId) {
  try {
    console.log('🔍 UserSubscriptionStatus - Fetching subscription for userId:', userId);
    console.log('🔍 UserSubscriptionStatus - API URL:', `${Astro.url.origin}/api/user/subscription`);
    
    const response = await fetch(`${Astro.url.origin}/api/user/subscription`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ userId })
    });

    console.log('🔍 UserSubscriptionStatus - Response status:', response.status);
    console.log('🔍 UserSubscriptionStatus - Response ok:', response.ok);

    if (response.ok) {
      subscriptionData = await response.json();
      console.log('✅ UserSubscriptionStatus - Subscription data received:', subscriptionData);
    } else {
      const error = await response.json();
      subscriptionError = error.error || 'Failed to load subscription data';
      console.error('❌ UserSubscriptionStatus - Subscription fetch failed:', error);
      console.error('❌ UserSubscriptionStatus - Response status:', response.status);
      console.error('❌ UserSubscriptionStatus - Response headers:', response.headers);
    }
  } catch (error) {
    subscriptionError = 'Network error during subscription fetch';
    console.error('❌ UserSubscriptionStatus - Network error:', error);
    console.error('❌ UserSubscriptionStatus - Error details:', {
      message: error.message,
      stack: error.stack,
      name: error.name
    });
  }
} else {
  subscriptionError = 'No userId provided';
  console.error('❌ UserSubscriptionStatus - No userId provided');
}

// Format date
const formatDate = (dateString: string | null) => {
  if (!dateString) return 'Not set';
  return new Date(dateString).toLocaleDateString('en-US');
};

// Calculate remaining days
const getDaysRemaining = (expiresAt: string | null) => {
  if (!expiresAt) return null;
  const now = new Date();
  const expiry = new Date(expiresAt);
  const diffTime = expiry.getTime() - now.getTime();
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  return diffDays;
};
---

{subscriptionError ? (
  <div class="subscription-error bg-red-50 border border-red-200 rounded-lg p-4">
    <div class="flex items-center">
      <svg class="w-5 h-5 text-red-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
      </svg>
      <div>
        <h3 class="text-sm font-medium text-red-800">Failed to fetch subscription data</h3>
        <p class="text-xs text-red-600 mt-1">{subscriptionError}</p>
      </div>
    </div>
  </div>
) : subscriptionData ? (
  <div class="subscription-status">
    {subscriptionData.hasActiveSubscription ? (
      <!-- Active subscription -->
      <div class="active-subscription bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-6">
        <div class="flex items-center justify-between mb-4">
          <div class="flex items-center">
            <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mr-4">
              <svg class="w-6 h-6 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
              </svg>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-green-900">{subscriptionData.subscription.plan_name} Member</h3>
              <p class="text-sm text-green-700">Subscription Status: {subscriptionData.subscription.status === 'active' ? 'Active' : subscriptionData.subscription.status}</p>
            </div>
          </div>
          <div class="text-right">
            <span class="inline-flex px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
              {subscriptionData.subscription.billing_cycle === 'monthly' ? 'Monthly' : 'Yearly'}
            </span>
          </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
          <div>
            <span class="text-green-600 font-medium">Start Date</span>
            <p class="text-green-900">{formatDate(subscriptionData.subscription.starts_at)}</p>
          </div>
          <div>
            <span class="text-green-600 font-medium">Expiry Date</span>
            <p class="text-green-900">{formatDate(subscriptionData.subscription.expires_at)}</p>
          </div>
          <div>
            <span class="text-green-600 font-medium">Days Remaining</span>
            <p class="text-green-900">
              {(() => {
                const days = getDaysRemaining(subscriptionData.subscription.expires_at);
                if (days === null) return 'Unlimited';
                if (days <= 0) return 'Expired';
                if (days <= 7) return days + ' days (expiring soon)';
                return days + ' days';
              })()}
            </p>
          </div>
        </div>
        
        {subscriptionData.subscription.auto_renew && (
          <div class="mt-4 p-3 bg-green-100 rounded-md">
            <div class="flex items-center">
              <svg class="w-4 h-4 text-green-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd"></path>
              </svg>
              <span class="text-sm text-green-700">Auto-renewal enabled</span>
            </div>
          </div>
        )}
        
        <div class="mt-4 flex space-x-3">
          <a href="/user/subscription" class="inline-flex items-center px-4 py-2 border border-green-300 text-sm font-medium rounded-md text-green-700 bg-white hover:bg-green-50 transition-colors">
            Manage Subscription
          </a>
          <a href="/pricing" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 transition-colors">
            Upgrade Plan
          </a>
        </div>
      </div>
    ) : (
      <!-- No subscription -->
      <div class="no-subscription bg-gradient-to-r from-gray-50 to-blue-50 border border-gray-200 rounded-lg p-6">
        <div class="flex items-center justify-between mb-4">
          <div class="flex items-center">
            <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mr-4">
              <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900">Free User</h3>
              <p class="text-sm text-gray-600">Currently using free plan</p>
            </div>
          </div>
        </div>
        
        <div class="mb-4">
          <h4 class="text-sm font-medium text-gray-900 mb-2">Free plan includes:</h4>
          <ul class="text-sm text-gray-600 space-y-1">
            <li class="flex items-center">
              <svg class="w-4 h-4 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              Basic feature access
            </li>
            <li class="flex items-center">
              <svg class="w-4 h-4 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              Limited quota usage
            </li>
            <li class="flex items-center">
              <svg class="w-4 h-4 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              Community support
            </li>
          </ul>
        </div>
        
        <div class="bg-blue-50 border border-blue-200 rounded-md p-4 mb-4">
          <div class="flex items-center">
            <svg class="w-5 h-5 text-blue-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
            </svg>
            <div class="text-sm text-blue-800">
              <p class="font-medium">Upgrade to paid plan for more benefits</p>
              <p class="text-blue-600">Higher quotas, priority support, advanced features, etc.</p>
            </div>
          </div>
        </div>
        
        <div class="flex space-x-3">
          <a href="/pricing" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 transition-colors">
                      View Paid Plans
                    </a>
        </div>
      </div>
    )}
  </div>
) : (
  <div class="subscription-loading bg-gray-50 border border-gray-200 rounded-lg p-6">
    <div class="flex items-center justify-center">
      <svg class="animate-spin w-6 h-6 text-gray-600 mr-3" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
      <div class="text-center">
        <h3 class="text-sm font-medium text-gray-900">Loading subscription information</h3>
        <p class="text-xs text-gray-600 mt-1">Fetching your subscription status...</p>
      </div>
    </div>
  </div>
)}

<style>
  .subscription-status {
    transition: all 0.3s ease-in-out;
  }
  
  .transition-colors {
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
  }
</style>
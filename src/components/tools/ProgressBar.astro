---
export interface Props {
  id?: string;
  containerId?: string;
}

const { id = "progress-bar", containerId = "progress-container" } = Astro.props;
---

<div id={containerId} class="hidden mb-8">
  <div class="flex justify-between items-center mb-2">
    <span class="text-sm font-medium text-gray-700">Processing...</span>
    <span class="text-sm text-gray-500" id="progress-text">0%</span>
  </div>
  <div class="w-full bg-gray-200 rounded-full h-2">
    <div id={id} class="bg-blue-600 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
  </div>
</div>

<script is:inline define:vars={{ containerId }}>
  document.addEventListener('DOMContentLoaded', function() {
    const container = document.getElementById(containerId);
    if (!container) return;
    
    const progressBar = container.querySelector('.progress-bar');
    const progressText = container.querySelector('.progress-text');
    
    if (!progressBar || !progressText) return;
    
    // 模拟进度更新
    let progress = 0;
    const interval = setInterval(() => {
      progress += Math.random() * 10;
      if (progress >= 100) {
        progress = 100;
        clearInterval(interval);
      }
      
      progressBar.style.width = `${progress}%`;
      progressText.textContent = `${Math.round(progress)}%`;
    }, 500);
  });
</script>
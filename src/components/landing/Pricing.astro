---
// import BaseLayout from '../../layouts/BaseLayout.astro';
// import { Icon } from 'astro-icon/components';
---

<section class="pt-20" x-data="{duration: 'monthly'}">
  <div class="mx-auto w-full lg:px-24 max-w-7xl md:px-12 items-center px-8">
    <div class="max-w-xl text-center mx-auto">

      <h2
        class="text-xl leading-tight tracking-tight sm:text-2xl md:text-3xl capitalize lg:text-4xl mt-4 font-medium text-base-900 lg:text-balance">
        Equip your business
      </h2>
      <p
        class="text-base leading-normal mt-4 text-base-500 font-medium lg:text-balance">
        Choose a plan that works the best for you and your team.
      </p>
      <div
        aria-labelledby="pricing-toggle"
        class="w-full relative mt-8 ring-1 ring-base-200 ring-offset-2 bg-white overflow-hidden justify-center gap-4 mx-auto lg:mx-0 inline-flex p-1 rounded-md max-w-52 shadow z-0">
        <!-- Monthly Pricing Button: Sets 'duration' to 'monthly' when clicked -->
        <!-- Sliding background -->
        <div
          class="absolute inset-0 bg-base-50 rounded-md transition-transform duration-200 ease-in-out"
          :class="duration === 'monthly' ? 'w-1/2 translate-x-0' : 'w-1/2 translate-x-full'">
        </div>
        <!-- Monthly Pricing Button -->
        <button
          id="monthly-pricing-button"
          class="relative flex items-center justify-center w-full px-2 h-6 text-xs font-medium focus:outline-none transition-colors duration-300 z-10"
          :class="duration === 'monthly' ? 'text-accent-600' : 'text-base-500 hover:text-accent-500'"
          @click="duration = 'monthly'"
          type="button"
          :aria-pressed="duration === 'monthly'">
          Monthly
        </button>
        <!-- Annual Pricing Button -->
        <button
          id="annual-pricing-button"
          class="relative flex items-center justify-center w-full px-2 h-6 text-xs font-medium focus:outline-none transition-colors duration-300 z-10"
          :class="duration === 'annual' ? 'text-accent-600' : 'text-base-500 hover:text-accent-500'"
          @click="duration = 'annual'"
          type="button"
          :aria-pressed="duration === 'annual'">
          Annual
        </button>
      </div>
    </div>
    <div
      class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 mt-12 mx-auto">
      <!-- Tier one -->
      <div
        class="flex flex-col h-full p-1 lg:py-1 rounded-3xl bg-base-50 ring-4 ring-base-50 border border-base-200">
        <div>
          <div class="flex flex-col gap-4 p-8 bg-white rounded-[1.3rem] h-full">
            <div class="flex items-start justify-between w-full">
              <div>
                <h3
                  class="text-lg leading-normal sm:text-xl md:text-2xl font-medium text-base-900">
                  Free
                </h3>
                <p class="text-base leading-normal font-medium text-base-500">
                  For guest users
                </p>
              </div>
            </div>
            <p class="text-base leading-normal font-medium text-base-500">
              This subscription tier caters to individuals and hobbyists seeking
              features.
            </p>
          </div>
        </div>
        <div class="p-8">
          <p
            class="font-semibold flex lg:text-3xl items-baseline text-2xl tracking-tighter text-base-900">
            <span
              data-monthly="$0.00"
              data-annual="$0.00"
              x-text="$el.dataset[duration]">
            </span>
            <span
              class="text-sm font-normal font-sans tracking-normal text-base-500">
              <span x-show="duration === 'monthly'">/month</span>
              <span x-show="duration === 'annual'" style="display: none">
                /annually
              </span>
            </span>
          </p>
          <div class="w-full mt-4">
            <a
              href="/auth/login"
              class="flex items-center justify-center transition-all duration-200 focus:ring-2 focus:outline-none text-base-500 bg-white hover:text-accent-500 ring-1 ring-base-200 focus:ring-accent-500 h-9 px-4 py-2 text-sm font-medium rounded-md w-full">
              Get Started
            </a>
          </div>
          <div class="mt-8">
            <p
              class="text-sm leading-normal font-medium uppercase text-base-500">
              Free plan includes:
            </p>
            <ul class="flex flex-col mt-4 gap-y-3 text-base-500" role="list">
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">10 times DR checks</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">10 times traffic checker</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">10 times backlink checker</span>
              </li>

              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">50 backlinks view</span>
              </li>

            </ul>
          </div>
        </div>
      </div>
      <!-- Tier two -->
      <div
        class="flex flex-col h-full p-1 lg:py-1 rounded-3xl bg-base-950 ring-4 ring-base-50 border border-base-200">
        <div>
          <div
            class="flex flex-col gap-4 p-8 bg-white/10 rounded-[1.3rem] h-full">
            <div class="flex items-start justify-between w-full">
              <div>
                <h3
                  class="text-lg leading-normal sm:text-xl md:text-2xl font-medium text-white">
                  Pro
                </h3>
                <p class="text-base leading-normal font-medium text-base-100">
                  For startups
                </p>
              </div>
              <span
                class="inline-flex items-center font-medium relative text-base-700 bg-base-50 px-2.5 py-1 text-xs rounded-md">
                Popular
              </span>
            </div>
            <p class="text-base leading-normal font-medium text-base-100">
              This subscription is suitable for SEO professionals, providing more query points and supporting export.
            </p>
          </div>
        </div>
        <div class="p-8">
          <p
            class="font-semibold flex lg:text-3xl items-baseline text-2xl tracking-tighter text-white">
            <span
              data-monthly="$49.00"
              data-annual="$39.00"
              x-text="$el.dataset[duration]">
            </span>
            <span
              class="text-sm font-normal font-sans tracking-normal text-white/50">
              <span x-show="duration === 'monthly'">/month</span>
              <span x-show="duration === 'annual'" style="display: none">
                /annually
              </span>
            </span>
          </p>
          <div class="w-full mt-4">
            <button
              onclick="handleUpgrade('pro')"
              class="flex items-center justify-center transition-all duration-200 focus:ring-2 focus:outline-none text-base-500 bg-white hover:text-accent-500 ring-1 ring-base-200 focus:ring-accent-500 h-9 px-4 py-2 text-sm font-medium rounded-md w-full">
              Upgrade to Pro
            </button>
          </div>
          <div class="mt-8">
            <p
              class="text-sm leading-normal font-medium uppercase text-base-100">
              Pro plan includes:
            </p>
            <ul class="flex flex-col mt-4 gap-y-3 text-base-100" role="list">
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">1000 times DR checks</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">
                  1000 times traffic checker
                </span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">1000 times backlink checker</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">
                  All backlinks view (200+)
                </span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">
                  Exclusive email support
                </span>
              </li>

            </ul>
          </div>
        </div>
      </div>
      <!-- Tier three -->
      <div
        class="flex flex-col h-full p-1 lg:py-1 rounded-3xl bg-accent-700 ring-4 ring-base-50 border border-base-200">
        <div>
          <div
            class="flex flex-col gap-4 p-8 bg-white/10 rounded-[1.3rem] h-full">
            <div class="flex items-start justify-between w-full">
              <div>
                <h3
                  class="text-lg leading-normal sm:text-xl md:text-2xl font-medium text-white">
                  Super
                </h3>
                <p class="text-base leading-normal font-medium text-base-100">
                  For corporates
                </p>
              </div>
            </div>
            <p class="text-base leading-normal font-medium text-base-100">
              Designed for professional SEO users, offering more points and early access to new features.
            </p>
          </div>
        </div>
        <div class="p-8">
          <p
            class="font-semibold flex lg:text-3xl items-baseline text-2xl tracking-tighter text-white">
            <span
              data-monthly="$99.00"
              data-annual="$79.00"
              x-text="$el.dataset[duration]">
            </span>
            <span
              class="text-sm font-normal font-sans tracking-normal text-accent-100">
              <span x-show="duration === 'monthly'">/month</span>
              <span x-show="duration === 'annual'" style="display: none">
                /annually
              </span>
            </span>
          </p>
          <div class="w-full mt-4">
            <button
              onclick="handleUpgrade('super')"
              class="flex items-center justify-center transition-all duration-200 focus:ring-2 focus:outline-none text-base-500 bg-white hover:text-accent-500 ring-1 ring-base-200 focus:ring-accent-500 h-9 px-4 py-2 text-sm font-medium rounded-md w-full">
              Upgrade to SuperPro
            </button>
          </div>
          <div class="mt-8">
            <p
              class="text-sm leading-normal font-medium uppercase text-base-100">
              Super plan includes:
            </p>
            <ul class="flex flex-col mt-4 gap-y-3 text-base-100" role="list">
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">5000 times DR checks</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">5000 times traffic checker</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">5000 times backlink checker</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">
                  All backlinks view (200+)
                </span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">Priority exclusive email support</span>
              </li>
              <li class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="icon icon-tabler icons-tabler-outline icon-tabler-circle-check size-4">
                  <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                  <path d="M5 12l5 5l10 -10"></path>
                </svg>
                <span class="text-base leading-normal">Early access to new features</span>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script is:inline>
  // 防重复执行标志
  let isUpgradeInProgress = false;
  
  // 调试函数：检查cookies
  function debugCookies() {
    console.log('=== COOKIES DEBUG ===');
    console.log('All cookies:', document.cookie);
    
    // 检查特定的认证cookies
    const cookies = document.cookie.split(';').reduce((acc, cookie) => {
      const [key, value] = cookie.trim().split('=');
      acc[key] = value;
      return acc;
    }, {});
    
    console.log('Parsed cookies:', cookies);
    console.log('sb-access-token exists:', !!cookies['sb-access-token']);
    console.log('sb-refresh-token exists:', !!cookies['sb-refresh-token']);
    
    if (cookies['sb-access-token']) {
      console.log('Access token length:', cookies['sb-access-token'].length);
      console.log('Access token preview:', cookies['sb-access-token'].substring(0, 20) + '...');
    }
    
    if (cookies['sb-refresh-token']) {
      console.log('Refresh token length:', cookies['sb-refresh-token'].length);
      console.log('Refresh token preview:', cookies['sb-refresh-token'].substring(0, 20) + '...');
    }
    
    console.log('=== END COOKIES DEBUG ===');
    return cookies;
  }
  
  // 测试认证API的函数
  async function testAuthAPI() {
    console.log('=== TESTING AUTH API ===');
    
    try {
      const response = await fetch('/api/auth/check', {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        }
      });
      
      console.log('Auth API response status:', response.status);
      console.log('Auth API response headers:', Object.fromEntries(response.headers.entries()));
      
      const data = await response.json();
      console.log('Auth API response data:', data);
      
      return { success: response.ok, data, status: response.status };
    } catch (error) {
      console.error('Auth API error:', error);
      return { success: false, error: error.message };
    } finally {
      console.log('=== END AUTH API TEST ===');
    }
  }
  
  // 检查是否有保存的支付数据（用户登录后自动处理支付）
  function checkPendingPayment() {
    const paymentData = sessionStorage.getItem('payment_data');
    if (paymentData) {
      try {
        const data = JSON.parse(paymentData);
        console.log('Found pending payment data:', data);
        
        // 清除保存的数据
        sessionStorage.removeItem('payment_data');
        
        // 自动触发支付流程
        setTimeout(() => {
          console.log('Auto-triggering payment for:', data.plan);
          handleUpgrade(data.plan);
        }, 1000);
      } catch (error) {
        console.error('Error parsing payment data:', error);
        sessionStorage.removeItem('payment_data');
      }
    }
  }
  
  // 确保在 DOM 加载完成后初始化
  document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded, initializing handleUpgrade function');
    
    // 检查是否有待处理的支付
    checkPendingPayment();
    

    

    
    // 将函数绑定到全局作用域
    window.handleUpgrade = async function(plan) {
      // 防重复执行检查
      if (isUpgradeInProgress) {
        console.log('Upgrade already in progress, ignoring duplicate call');
        return;
      }
      
      isUpgradeInProgress = true;
      console.log('=== HANDLE UPGRADE START ===');
      console.log('handleUpgrade called with plan:', plan);
      
      try {
        // 首先进行详细的调试
        const cookies = debugCookies();
        
        // 获取当前选择的计费周期
        let billingCycle = 'monthly';
        
        // 检查按钮状态获取计费周期
        const annualButton = document.getElementById('annual-pricing-button');
        if (annualButton && annualButton.getAttribute('aria-pressed') === 'true') {
          billingCycle = 'annual';
        }
        
        console.log('Billing cycle:', billingCycle);
        
        // 检查是否有必要的cookies（只要有其中一个就认为已登录）
        if (!cookies['sb-access-token'] && !cookies['sb-refresh-token']) {
          console.error('❌ No authentication cookies found!');
          console.log('Starting Google OAuth login with payment intent...');
          
          // 保存支付意图到sessionStorage
          const paymentData = {
            plan: plan,
            billing_cycle: billingCycle,
            timestamp: Date.now()
          };
          sessionStorage.setItem('payment_data', JSON.stringify(paymentData));
          console.log('Payment data saved to sessionStorage:', paymentData);
          
          // 直接调用Google OAuth登录，登录成功后会自动处理支付流程
          try {
            // 构建回调URL，包含重定向参数
            const redirectTo = '/pricing';
            const callbackUrl = new URL('/auth/callback', window.location.origin);
            callbackUrl.searchParams.set('redirect_to', redirectTo);
            
            // 创建Supabase客户端
             const { createClient } = await import('https://esm.sh/@supabase/supabase-js@2');
             const supabase = createClient(
               'https://fmkekjlsfnvubnvurhbt.supabase.co',
               'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZta2VramxzZm52dWJudnVyaGJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMyNjc1NDQsImV4cCI6MjA2ODg0MzU0NH0.WzFGwqoDKG0Sjw1uj5U9rR8dc2qjTja8IRhlynofidA'
             );
            
            // 执行Google OAuth登录
            const { error } = await supabase.auth.signInWithOAuth({
              provider: 'google',
              options: {
                redirectTo: callbackUrl.toString()
              }
            });
            
            if (error) {
              console.error('Google OAuth error:', error);
              throw error;
            }
          } catch (error) {
            console.error('Failed to initiate Google OAuth:', error);
            alert('登录失败，请重试');
          }
          return;
        }
        
        // 详细的认证检查
        console.log('🔍 Starting authentication check...');
        
        const authResult = await testAuthAPI();
        
        if (!authResult.success) {
          console.error('❌ Authentication check failed:', authResult);
          alert('认证检查失败：' + (authResult.error || '请重新登录'));
          return;
        }
        
        const userData = authResult.data;
        const userId = userData.user?.id;
        
        if (!userId) {
          console.error('❌ No user ID found in response:', userData);
          alert('无法获取用户信息，请重新登录。');
          return;
        }
        
        console.log('✅ Authentication successful, user ID:', userId);

        // 创建支付会话
        console.log('🛒 Creating checkout session...');
        console.log('Checkout payload:', { plan, billing_cycle: billingCycle, user_id: userId });
        
        const checkoutResponse = await fetch('/api/payment/create-checkout', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 
            plan, 
            billing_cycle: billingCycle,
            user_id: userId 
          }),
        });

        console.log('Checkout response status:', checkoutResponse.status);
        console.log('Checkout response headers:', Object.fromEntries(checkoutResponse.headers.entries()));

        if (!checkoutResponse.ok) {
          const errorData = await checkoutResponse.json();
          console.error('❌ Checkout error:', errorData);
          throw new Error(errorData.error || 'Failed to create checkout session');
        }

        const checkoutData = await checkoutResponse.json();
        console.log('Checkout response data:', checkoutData);
        
        const { checkout_url: url } = checkoutData;
        
        if (!url) {
          console.error('❌ No checkout URL in response');
          throw new Error('未能获取支付链接，请重试');
        }
        
        console.log('✅ Redirecting to Stripe URL:', url);
        console.log('=== HANDLE UPGRADE SUCCESS ===');
        
        // 跳转到 Stripe 支付页面
        window.location.href = url;
        
      } catch (error) {
        console.error('❌ Error in handleUpgrade:', error);
        console.log('=== HANDLE UPGRADE FAILED ===');
        alert('支付处理失败：' + error.message);
      } finally {
        // 重置标志，允许下次执行
        isUpgradeInProgress = false;
      }
    };
    
    // 验证函数是否正确绑定
    console.log('handleUpgrade function bound to window:', typeof window.handleUpgrade === 'function');
    
    // 为所有升级按钮添加事件监听器作为备用方案
    const upgradeButtons = document.querySelectorAll('[onclick*="handleUpgrade"]');
    console.log('Found upgrade buttons:', upgradeButtons.length);
    
    upgradeButtons.forEach((button, index) => {
      console.log(`Setting up button ${index}:`, button);
      
      // 提取 plan 参数
      const onclickAttr = button.getAttribute('onclick');
      const planMatch = onclickAttr.match(/handleUpgrade\('([^']+)'\)/);
      const plan = planMatch ? planMatch[1] : 'pro';
      
      // 添加事件监听器
      button.addEventListener('click', function(e) {
        console.log(`Button ${index} clicked for plan:`, plan);
        e.preventDefault();
        if (window.handleUpgrade) {
          window.handleUpgrade(plan);
        } else {
          console.error('handleUpgrade function not found on window');
        }
      });
    });
  });
  
  // 如果页面已经加载完成，立即执行初始化
  if (document.readyState !== 'loading') {
    console.log('Document already loaded, triggering DOMContentLoaded handler');
    // 触发 DOMContentLoaded 事件处理器
    const event = new Event('DOMContentLoaded');
    document.dispatchEvent(event);
  }
</script>

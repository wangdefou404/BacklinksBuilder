---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="角色测试页面">
  <div class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-4xl mx-auto px-4">
      <div class="bg-white rounded-lg shadow-lg p-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-8">用户角色测试</h1>
        
        <div class="space-y-6">
          <!-- 当前用户信息 -->
          <div class="bg-blue-50 p-6 rounded-lg">
            <h2 class="text-xl font-semibold text-blue-900 mb-4">当前用户信息</h2>
            <div id="user-info" class="text-gray-700">
              <p>正在获取用户信息...</p>
            </div>
          </div>
          
          <!-- 角色信息 -->
          <div class="bg-green-50 p-6 rounded-lg">
            <h2 class="text-xl font-semibold text-green-900 mb-4">用户角色</h2>
            <div id="role-info" class="text-gray-700">
              <p>正在获取角色信息...</p>
            </div>
          </div>
          
          <!-- localStorage状态 -->
          <div class="bg-yellow-50 p-6 rounded-lg">
            <h2 class="text-xl font-semibold text-yellow-900 mb-4">localStorage状态</h2>
            <div id="storage-info" class="text-gray-700">
              <p>正在检查localStorage...</p>
            </div>
          </div>
          
          <!-- 操作按钮 -->
          <div class="bg-gray-50 p-6 rounded-lg">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">操作</h2>
            <div class="space-x-4">
              <button id="refresh-btn" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
                刷新信息
              </button>
              <button id="clear-storage-btn" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700">
                清理localStorage
              </button>
              <button id="logout-btn" class="bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700">
                退出登录
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script is:inline>
  import { supabase } from '../lib/supabase';
  
  // 获取DOM元素
  const userInfo = document.getElementById('user-info');
  const roleInfo = document.getElementById('role-info');
  const storageInfo = document.getElementById('storage-info');
  const refreshBtn = document.getElementById('refresh-btn');
  const clearStorageBtn = document.getElementById('clear-storage-btn');
  const logoutBtn = document.getElementById('logout-btn');
  
  // 获取用户信息
  async function getUserInfo() {
    try {
      const { data: { session }, error } = await supabase.auth.getSession();
      
      if (error) {
        throw error;
      }
      
      if (!session || !session.user) {
        if (userInfo) {
          userInfo.innerHTML = '<p class="text-red-600">用户未登录</p>';
        }
        if (roleInfo) {
          roleInfo.innerHTML = '<p class="text-red-600">请先登录</p>';
        }
        return;
      }
      
      const user = session.user;
      
      // 显示用户基本信息
      if (userInfo) {
        userInfo.innerHTML = `
          <div class="space-y-2">
            <p><strong>用户ID:</strong> ${user.id}</p>
            <p><strong>邮箱:</strong> ${user.email}</p>
            <p><strong>登录方式:</strong> ${user.app_metadata?.provider || '未知'}</p>
            <p><strong>创建时间:</strong> ${new Date(user.created_at).toLocaleString()}</p>
          </div>
        `;
      }
      
      // 获取用户角色
      try {
        const roleResponse = await fetch('/api/auth/get-user-role', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ userId: user.id })
        });
        
        if (roleResponse.ok) {
          const roleData = await roleResponse.json();
          
          if (roleInfo) {
            roleInfo.innerHTML = `
              <div class="space-y-2">
                <p><strong>角色:</strong> <span class="font-semibold ${getRoleColor(roleData.role)}">${roleData.role}</span></p>
                <p><strong>是否管理员:</strong> ${roleData.isAdmin ? '✅ 是' : '❌ 否'}</p>
                <p><strong>是否高级用户:</strong> ${roleData.isPremium ? '✅ 是' : '❌ 否'}</p>
                <p><strong>是否免费用户:</strong> ${roleData.isFree ? '✅ 是' : '❌ 否'}</p>
                <p><strong>权限数量:</strong> ${roleData.permissions?.length || 0}</p>
                ${roleData.roleDetails ? `<p><strong>角色详情:</strong> 已分配</p>` : '<p><strong>角色详情:</strong> 未分配到user_roles表</p>'}
              </div>
            `;
          }
        } else {
          const errorText = await roleResponse.text();
          if (roleInfo) {
            roleInfo.innerHTML = `<p class="text-red-600">获取角色失败: ${errorText}</p>`;
          }
        }
      } catch (roleError) {
        console.error('获取角色失败:', roleError);
        if (roleInfo) {
          roleInfo.innerHTML = `<p class="text-red-600">获取角色异常: ${roleError.message}</p>`;
        }
      }
      
    } catch (error) {
      console.error('获取用户信息失败:', error);
      if (userInfo) {
        userInfo.innerHTML = `<p class="text-red-600">获取用户信息失败: ${error.message}</p>`;
      }
    }
  }
  
  // 获取localStorage状态
  function getStorageInfo() {
    if (storageInfo) {
      const adminLoggedIn = localStorage.getItem('adminLoggedIn');
      const adminUsername = localStorage.getItem('adminUsername');
      const adminLoginTime = localStorage.getItem('adminLoginTime');
      
      storageInfo.innerHTML = `
        <div class="space-y-2">
          <p><strong>adminLoggedIn:</strong> ${adminLoggedIn || '未设置'}</p>
          <p><strong>adminUsername:</strong> ${adminUsername || '未设置'}</p>
          <p><strong>adminLoginTime:</strong> ${adminLoginTime || '未设置'}</p>
        </div>
      `;
    }
  }
  
  // 获取角色颜色
  function getRoleColor(role) {
    switch (role) {
      case 'admin': return 'text-red-600';
      case 'premium': return 'text-purple-600';
      case 'free': return 'text-green-600';
      default: return 'text-gray-600';
    }
  }
  
  // 刷新信息
  function refreshInfo() {
    getUserInfo();
    getStorageInfo();
  }
  
  // 清理localStorage
  function clearStorage() {
    localStorage.removeItem('adminLoggedIn');
    localStorage.removeItem('adminUsername');
    localStorage.removeItem('adminLoginTime');
    getStorageInfo();
    alert('localStorage已清理');
  }
  
  // 退出登录
  async function logout() {
    try {
      await supabase.auth.signOut();
      clearStorage();
      alert('已退出登录');
      window.location.href = '/';
    } catch (error) {
      console.error('退出登录失败:', error);
      alert('退出登录失败: ' + error.message);
    }
  }
  
  // 绑定事件
  if (refreshBtn) {
    refreshBtn.addEventListener('click', refreshInfo);
  }
  
  if (clearStorageBtn) {
    clearStorageBtn.addEventListener('click', clearStorage);
  }
  
  if (logoutBtn) {
    logoutBtn.addEventListener('click', logout);
  }
  
  // 页面加载时获取信息
  document.addEventListener('DOMContentLoaded', () => {
    refreshInfo();
  });
</script>
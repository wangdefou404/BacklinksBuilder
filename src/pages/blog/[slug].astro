---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/blog/BlogPost.astro';
import { getAllBlogPosts, getBlogPost } from '../../data/blog';

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/404');
}

const post = await getBlogPost(slug);

if (!post) {
  return Astro.redirect('/404');
}

// 获取所有文章以计算上一篇和下一篇
const allPosts = await getAllBlogPosts();
const currentIndex = allPosts.findIndex(p => p.slug === slug);
const prevPost = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
const nextPost = currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : null;

const pageTitle = post.title;
const pageDescription = post.description;
const canonicalUrl = new URL(`/blog/${post.slug}`, Astro.site);
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <Fragment slot="head">
    <meta property="article:published_time" content={post.publishedAt.toISOString()} />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={canonicalUrl} />
    {post.image && (
      <meta property="og:image" content={post.image} />
    )}
    <meta name="twitter:card" content="summary_large_image" />
    {post.image && (
      <meta name="twitter:image" content={post.image} />
    )}
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json" is:inline set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": post.title,
      "description": post.description,
      "image": post.image,
      "publisher": {
        "@type": "Organization",
        "name": "Your Site Name"
      },
      "datePublished": post.publishedAt.toISOString(),
      "dateModified": post.publishedAt.toISOString(),
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": canonicalUrl.toString()
      }
    })} />
  </Fragment>

  <BlogPost post={post} prevPost={prevPost} nextPost={nextPost} />
</BaseLayout>
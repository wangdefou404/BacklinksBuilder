---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout>
  <main class="min-h-screen bg-gray-100 py-12">
    <div class="max-w-[1400px] mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Page Header -->
      <div class="text-center mb-12">
        <h1 class="text-2xl font-bold text-gray-900 mb-4">
          Submit Website List
        </h1>
        <p class="text-base text-gray-700 max-w-3xl mx-auto">
          Add your website to our backlink resource database to increase exposure opportunities.
        </p>
      </div>

      <!-- User Status Banner -->
      <div id="user-status-banner" class="bg-blue-100 border border-blue-300 rounded-lg p-4 mb-8">
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm text-blue-800">
                <span id="user-status-text">You are viewing as a free user. Showing guest resources only (max 50).</span>
                <a href="#" class="font-medium underline hover:text-blue-700">Upgrade to Premium</a> to access all resources.
              </p>
            </div>
          </div>
          <div class="flex items-center space-x-2">
            <span class="text-sm text-blue-800 font-medium">Demo Mode:</span>
            <button
              id="toggle-user-type"
              class="px-3 py-1 text-sm font-medium rounded-md transition-colors duration-200 bg-blue-600 text-white hover:bg-blue-700"
            >
              Switch to Premium
            </button>
          </div>
        </div>
      </div>



      <!-- Filters and Search -->
      <div class="bg-gray-50 rounded-lg shadow-md p-6 mb-8">
        <div class="grid grid-cols-1 md:grid-cols-5 gap-4">
          <div>
            <label for="search" class="block text-sm font-medium text-gray-800 mb-2">
              Search Resources
            </label>
            <input
              type="text"
              id="search"
              class="w-full px-3 py-2 border border-gray-400 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="Search by name..."
            />
          </div>
          <div>
            <label for="payment-filter" class="block text-sm font-medium text-gray-800 mb-2">
              Payment Type
            </label>
            <select
              id="payment-filter"
              class="w-full px-3 py-2 border border-gray-400 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">All Payment Types</option>
              <option value="Free">Free</option>
              <option value="Paid">Paid</option>
            </select>
          </div>
          <div>
            <label for="follow-filter" class="block text-sm font-medium text-gray-800 mb-2">
              Follow Type
            </label>
            <select
              id="follow-filter"
              class="w-full px-3 py-2 border border-gray-400 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">All Follow Types</option>
              <option value="DoFollow">DoFollow</option>
              <option value="NoFollow">NoFollow</option>
            </select>
          </div>
          <div>
            <label for="platform-filter" class="block text-sm font-medium text-gray-800 mb-2">
              Platform Type
            </label>
            <select
              id="platform-filter"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">All Platforms</option>
              <option value="Directory">Directory</option>
              <option value="Blog">Blog</option>
              <option value="Forum">Forum</option>
              <option value="Social">Social</option>
              <option value="News">News</option>
              <option value="Other">Other</option>
            </select>
          </div>
          <div class="flex items-end">
            <button
              id="apply-filters"
              class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium px-4 py-2 rounded-md transition-colors duration-200 text-sm"
            >
              Apply Filters
            </button>
          </div>
        </div>
      </div>

      <!-- Backlink Resources Table -->
      <div class="bg-white shadow-lg rounded-lg overflow-hidden border border-gray-300">
          <div class="overflow-x-auto">
            <table class="w-full min-w-[1200px] divide-y divide-gray-400">
            <thead class="bg-gray-200 border-b-2 border-gray-300">
              <tr>
                <th class="px-6 py-5 text-center text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-16">#</th>
                <th class="px-6 py-5 text-left text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-52">Name</th>
                <th class="px-6 py-5 text-left text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-48">Website Link</th>
                <th class="px-6 py-5 text-center text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-16">DR</th>
                <th class="px-6 py-5 text-right text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-32">Traffic</th>
                <th class="px-6 py-5 text-center text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-36">Payment Type</th>
                <th class="px-6 py-5 text-center text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-36">Follow Type</th>
                <th class="px-6 py-5 text-center text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-36">Platform Type</th>
                <th class="px-6 py-5 text-center text-sm font-bold text-gray-800 uppercase tracking-wider whitespace-nowrap w-36">Updated</th>
              </tr>
            </thead>
            <tbody id="backlinks-tbody" class="bg-gray-50 divide-y divide-gray-300">
              <!-- Backlink rows will be populated here -->
            </tbody>
          </table>
        </div>
      </div>

      <!-- Pagination -->
      <div class="flex items-center justify-between mt-6">
        <div class="text-sm text-gray-800">
          Showing <span id="showing-from">1</span> to <span id="showing-to">50</span> of <span id="total-items">0</span> results
        </div>
        <div class="flex space-x-2">
          <button
            id="prev-page"
            class="px-4 py-2 text-sm font-medium text-gray-600 bg-gray-50 border border-gray-400 rounded-md hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed"
            disabled
          >
            Previous
          </button>
          <button
            id="next-page"
            class="px-4 py-2 text-sm font-medium text-gray-600 bg-gray-50 border border-gray-400 rounded-md hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Next
          </button>
        </div>
      </div>

      <!-- Features Section -->
      <div class="mt-16 grid grid-cols-1 md:grid-cols-3 gap-8">
        <div class="text-center">
          <div class="bg-blue-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Quality Directories</h3>
          <p class="text-sm text-gray-700">Submit to hand-picked, high-authority directories that actually matter for SEO.</p>
        </div>
        
        <div class="text-center">
          <div class="bg-green-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Bulk Submission</h3>
          <p class="text-sm text-gray-700">Save time with automated bulk submissions to multiple directories at once.</p>
        </div>
        
        <div class="text-center">
          <div class="bg-purple-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">Progress Tracking</h3>
          <p class="text-sm text-gray-700">Monitor submission status and track approval rates across all directories.</p>
        </div>
      </div>
    </div>
  </main>

  <script is:inline>
    let currentPage = 1;
    // let totalPages = 1; // 未使用的变量
    let currentFilters = {};
    let isUserPremium = false; // This would be determined by user authentication
    let allBacklinks = [];
    let displayedBacklinks = [];

    // DOM elements
    const tbody = document.getElementById('backlinks-tbody');
    const searchInput = document.getElementById('search');
    const paymentFilter = document.getElementById('payment-filter');
    const followFilter = document.getElementById('follow-filter');
    const platformFilter = document.getElementById('platform-filter');
    const applyFiltersBtn = document.getElementById('apply-filters');
    const prevPageBtn = document.getElementById('prev-page');
    const nextPageBtn = document.getElementById('next-page');
    const userStatusText = document.getElementById('user-status-text');
    const showingFrom = document.getElementById('showing-from');
    const showingTo = document.getElementById('showing-to');
    const totalItems = document.getElementById('total-items');
    const toggleUserTypeBtn = document.getElementById('toggle-user-type');
    const userStatusBanner = document.getElementById('user-status-banner');

    // Initialize the page
    async function init() {
      updateUserStatus();
      await loadBacklinks();
      setupEventListeners();
    }

    // Update user status banner
    function updateUserStatus() {
      if (isUserPremium) {
        userStatusText.textContent = 'You are a premium user. Access to all resources (guest + premium).';
        userStatusBanner.className = 'bg-green-100 border border-green-300 rounded-lg p-4 mb-8';
        toggleUserTypeBtn.textContent = 'Switch to Free';
        toggleUserTypeBtn.className = 'px-3 py-1 text-sm font-medium rounded-md transition-colors duration-200 bg-green-600 text-white hover:bg-green-700';
      } else {
        userStatusText.textContent = 'You are viewing as a free user. Showing guest resources only (max 50).';
        userStatusBanner.className = 'bg-blue-100 border border-blue-300 rounded-lg p-4 mb-8';
        toggleUserTypeBtn.textContent = 'Switch to Premium';
        toggleUserTypeBtn.className = 'px-3 py-1 text-sm font-medium rounded-md transition-colors duration-200 bg-blue-600 text-white hover:bg-blue-700';
      }
    }

    // Load backlinks data
    async function loadBacklinks() {
      try {
        const params = new URLSearchParams({
          page: currentPage.toString(),
          limit: (isUserPremium ? '100' : '50'),
          isPremium: isUserPremium.toString(),
          ...currentFilters
        });
        
        const response = await fetch(`/api/backlinks?${params}`, {
          credentials: 'include'
        });
        
        if (!response.ok) {
          throw new Error('Failed to load backlinks');
        }
        
        const data = await response.json();
        
        allBacklinks = data.backlinks || [];
        displayedBacklinks = allBacklinks;
        
        renderBacklinks();
        updatePagination(data.pagination || {
          page: currentPage,
          limit: isUserPremium ? 100 : 50,
          total: allBacklinks.length,
          hasMore: false
        });
      } catch (error) {
        console.error('Error loading backlinks:', error);
        // Show error message to user
        tbody.innerHTML = '<tr><td colspan="9" class="px-6 py-12 text-center text-gray-500">加载外链数据失败，请刷新页面重试</td></tr>';
      }
    }



    // Render backlinks table
    function renderBacklinks() {
      tbody.innerHTML = '';
      
      if (!displayedBacklinks || displayedBacklinks.length === 0) {
        tbody.innerHTML = '<tr><td colspan="9" class="px-6 py-12 text-center text-gray-500">暂无外链数据</td></tr>';
        return;
      }
      
      displayedBacklinks.forEach((backlink, index) => {
        const row = document.createElement('tr');
        // 添加隔行交替背景色和hover效果
        const isEven = index % 2 === 0;
        row.className = isEven 
          ? 'bg-white hover:bg-blue-50 transition-colors duration-150' 
          : 'bg-gray-50 hover:bg-blue-50 transition-colors duration-150';
        
        // 处理数据格式兼容性
        const name = backlink.name || '';
        const websiteLink = backlink.website_link || backlink.websiteLink || '';
        const dr = backlink.dr || 0;
        const traffic = backlink.traffic || 0;
        const paymentType = backlink.payment_type || backlink.paymentType || 'free';
        const followType = backlink.follow_type || backlink.followType || 'nofollow';
        const platformType = backlink.platform_type || backlink.platformType || '';
        const updatedAt = backlink.updated_at || backlink.updated || '';
        
        // 格式化日期
        let formattedDate = updatedAt;
        if (updatedAt && updatedAt.includes('T')) {
          formattedDate = new Date(updatedAt).toLocaleDateString('zh-CN');
        }
        
        // 格式化流量数字
        const formattedTraffic = traffic > 0 ? traffic.toLocaleString() : '0';
        
        row.innerHTML = `
          <td class="px-6 py-6 whitespace-nowrap text-sm text-gray-700 text-center">
            ${((currentPage - 1) * (isUserPremium ? 100 : 50)) + index + 1}
          </td>
          <td class="px-6 py-6">
            <div class="text-sm text-gray-900">${name}</div>
          </td>
          <td class="px-6 py-6 whitespace-nowrap">
            <a href="${websiteLink}" target="_blank" class="text-blue-600 hover:text-blue-800 text-sm transition-colors duration-150">
              ${websiteLink ? new URL(websiteLink).hostname : ''}
            </a>
          </td>
          <td class="px-6 py-6 whitespace-nowrap text-sm text-gray-900 text-center">${dr}</td>
          <td class="px-6 py-6 whitespace-nowrap text-sm text-gray-900 text-right">${formattedTraffic}</td>
          <td class="px-6 py-6 whitespace-nowrap text-center text-sm text-gray-900">
            <span class="inline-flex px-2 py-1 text-sm rounded-full ${
              paymentType.toLowerCase() === 'free' 
                ? 'bg-green-100 text-green-800' 
                : 'bg-orange-100 text-orange-800'
            }">
              ${paymentType.charAt(0).toUpperCase() + paymentType.slice(1)}
            </span>
          </td>
          <td class="px-6 py-6 whitespace-nowrap text-center text-sm text-gray-900">
            <span class="inline-flex px-2 py-1 text-sm rounded-full ${
              followType.toLowerCase() === 'dofollow' 
                ? 'bg-blue-100 text-blue-800' 
                : 'bg-gray-100 text-gray-800'
            }">
              ${followType.charAt(0).toUpperCase() + followType.slice(1)}
            </span>
          </td>
          <td class="px-6 py-6 whitespace-nowrap text-center text-sm text-gray-900">
            <span class="inline-flex px-2 py-1 text-sm rounded-full bg-purple-100 text-purple-800">
              ${platformType}
            </span>
          </td>
          <td class="px-6 py-6 whitespace-nowrap text-sm text-gray-600 text-center">${formattedDate}</td>
        `;
        
        tbody.appendChild(row);
      });
    }

    // Update pagination info
    function updatePagination(data) {
      const from = ((data.page - 1) * data.limit + 1);
      const to = Math.min(data.page * data.limit, data.total);
      
      showingFrom.textContent = from.toString();
      showingTo.textContent = to.toString();
      totalItems.textContent = data.total.toString();
      
      prevPageBtn.disabled = data.page <= 1;
      nextPageBtn.disabled = !data.hasMore;
      
      currentPage = data.page;
    }

    // Apply filters
    function applyFilters() {
      currentFilters = {
        search: searchInput.value.trim() || undefined,
        paymentType: paymentFilter.value || undefined,
        followType: followFilter.value || undefined,
        platformType: platformFilter.value || undefined
      };
      
      // Filter the displayed backlinks
      displayedBacklinks = allBacklinks.filter(backlink => {
        let matches = true;
        
        if (currentFilters.search) {
          const searchTerm = currentFilters.search.toLowerCase();
          const name = (backlink.name || '').toLowerCase();
          matches = matches && name.includes(searchTerm);
        }
        
        if (currentFilters.paymentType) {
          const paymentType = backlink.payment_type || backlink.paymentType || 'free';
          matches = matches && paymentType.toLowerCase() === currentFilters.paymentType.toLowerCase();
        }
        
        if (currentFilters.followType) {
          const followType = backlink.follow_type || backlink.followType || 'nofollow';
          matches = matches && followType.toLowerCase() === currentFilters.followType.toLowerCase();
        }
        
        if (currentFilters.platformType) {
          const platformType = backlink.platform_type || backlink.platformType || '';
          matches = matches && platformType.toLowerCase() === currentFilters.platformType.toLowerCase();
        }
        
        return matches;
      });
      
      renderBacklinks();
      
      // Update pagination for filtered results
      updatePagination({
        page: 1,
        limit: isUserPremium ? 100 : 50,
        total: displayedBacklinks.length,
        hasMore: false
      });
    }

    // Setup event listeners
    function setupEventListeners() {
      // User type toggle button
      toggleUserTypeBtn.addEventListener('click', () => {
        isUserPremium = !isUserPremium;
        currentPage = 1;
        updateUserStatus();
        loadBacklinks();
      });
      
      applyFiltersBtn.addEventListener('click', applyFilters);
      
      // Apply filters on Enter key in search
      searchInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
          applyFilters();
        }
      });
      
      prevPageBtn.addEventListener('click', () => {
        if (currentPage > 1) {
          currentPage--;
          loadBacklinks();
        }
      });
      
      nextPageBtn.addEventListener('click', () => {
        currentPage++;
        loadBacklinks();
      });
    }

    // Initialize when page loads
    document.addEventListener('DOMContentLoaded', init);
  </script>
</BaseLayout>
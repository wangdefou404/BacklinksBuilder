---
import BaseLayout from "../layouts/BaseLayout.astro";
import AuthStatus from "../components/auth/AuthStatus.astro";
---

<BaseLayout title="测试 AuthStatus 下拉菜单">
<div class="bg-gray-100 p-8 min-h-screen">
    <div class="max-w-4xl mx-auto">
        <h1 class="text-3xl font-bold mb-8">AuthStatus 下拉菜单调试页面</h1>
        
        <!-- 简化版的 AuthStatus 测试组件 -->
        <div class="bg-white p-6 rounded-lg shadow-lg mb-8">
            <h2 class="text-xl font-semibold mb-4">简化版下拉菜单测试</h2>
            <div 
                x-data="{
                    isOpen: false,
                    toggleDropdown() {
                        console.log('toggleDropdown 被调用，当前 isOpen:', this.isOpen);
                        this.isOpen = !this.isOpen;
                        console.log('toggleDropdown 执行后，新的 isOpen:', this.isOpen);
                    },
                    init() {
                        console.log('简化版 Alpine.js 组件初始化完成');
                        console.log('初始 isOpen 状态:', this.isOpen);
                    }
                }"
                class="relative"
            >
                <!-- 头像按钮 -->
                <button 
                    @click="toggleDropdown()"
                    class="flex items-center space-x-2 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
                >
                    <div class="w-8 h-8 bg-white rounded-full flex items-center justify-center text-blue-500 font-bold">
                        U
                    </div>
                    <span>测试用户</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>

                <!-- 下拉菜单 -->
                <div 
                    x-show="isOpen"
                    x-transition:enter="transition ease-out duration-200"
                    x-transition:enter-start="opacity-0 scale-95"
                    x-transition:enter-end="opacity-100 scale-100"
                    x-transition:leave="transition ease-in duration-150"
                    x-transition:leave-start="opacity-100 scale-100"
                    x-transition:leave-end="opacity-0 scale-95"
                    @click.away="isOpen = false"
                    class="absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border border-gray-200 z-50"
                >
                    <div class="p-4 border-b border-gray-200">
                        <p class="text-sm text-gray-600">测试用户</p>
                        <p class="text-xs text-gray-500">test@example.com</p>
                    </div>
                    <div class="py-2">
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                            个人资料
                        </a>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                            设置
                        </a>
                        <button 
                            @click="alert('退出登录测试')"
                            class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50"
                        >
                            退出登录
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- 调试信息面板 -->
        <div class="bg-gray-800 text-white p-6 rounded-lg mb-8">
            <h2 class="text-xl font-semibold mb-4">调试信息</h2>
            <div class="space-y-2 text-sm font-mono">
                <div>Alpine.js 版本: <span id="alpine-version">检查中...</span></div>
                <div>Alpine.js 状态: <span id="alpine-status">检查中...</span></div>
                <div>点击计数: <span id="click-count">0</span></div>
                <div>当前时间: <span id="current-time"></span></div>
            </div>
        </div>

        <!-- 实际的 AuthStatus 组件测试 -->
        <div class="bg-white p-6 rounded-lg shadow-lg">
            <h2 class="text-xl font-semibold mb-4">实际 AuthStatus 组件</h2>
            <div class="border border-gray-300 rounded p-4">
                <p class="text-gray-600 mb-4">实际的 AuthStatus 组件：</p>
                <div class="flex justify-end">
                    <AuthStatus />
                </div>
            </div>
        </div>
    </div>
</div>

<script>
        // 调试脚本
        let clickCount = 0;
        
        function updateDebugInfo() {
            // 检查 Alpine.js
            const alpineStatus = document.getElementById('alpine-status');
            const alpineVersion = document.getElementById('alpine-version');
            
            if (window.Alpine) {
                alpineStatus.textContent = '已加载';
                alpineVersion.textContent = window.Alpine.version || '未知版本';
            } else {
                alpineStatus.textContent = '未加载';
                alpineVersion.textContent = 'N/A';
            }
            
            // 更新时间
            document.getElementById('current-time').textContent = new Date().toLocaleTimeString();
        }
        
        // 监听点击事件
        document.addEventListener('click', function(e) {
            clickCount++;
            document.getElementById('click-count').textContent = clickCount;
            console.log('页面点击事件:', e.target, '点击计数:', clickCount);
        });
        
        // 页面加载完成后的检查
        document.addEventListener('DOMContentLoaded', function() {
            console.log('页面 DOM 加载完成');
            updateDebugInfo();
            
            // 定期更新调试信息
            setInterval(updateDebugInfo, 1000);
            
            // 检查 Alpine.js 是否正确初始化
            setTimeout(() => {
                console.log('延迟检查 Alpine.js 状态');
                updateDebugInfo();
                
                // 检查 x-data 元素
                const alpineElements = document.querySelectorAll('[x-data]');
                console.log('找到的 Alpine.js 元素数量:', alpineElements.length);
                alpineElements.forEach((el, index) => {
                    console.log(`Alpine 元素 ${index + 1}:`, el);
                    if (el._x_dataStack) {
                        console.log(`元素 ${index + 1} 的数据栈:`, el._x_dataStack);
                    }
                });
            }, 2000);
        });
        
        // Alpine.js 初始化完成后的回调
        document.addEventListener('alpine:init', () => {
            console.log('Alpine.js 初始化完成');
            updateDebugInfo();
        });
        
        // 全局错误捕获
        window.addEventListener('error', function(e) {
            console.error('页面错误:', e.error);
            console.error('错误信息:', e.message);
            console.error('错误位置:', e.filename, '行:', e.lineno);
        });
        
        // 未捕获的 Promise 错误
        window.addEventListener('unhandledrejection', function(e) {
            console.error('未捕获的 Promise 错误:', e.reason);
        });
</script>
</BaseLayout>
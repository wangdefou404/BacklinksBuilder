---
import BaseLayout from "../../layouts/BaseLayout.astro";

// 服务器端认证检查
const user = Astro.locals.user;
const userRole = Astro.locals.userRole;

// 如果用户未登录或不是管理员，重定向到登录页面
if (!user || userRole !== 'admin') {
  return Astro.redirect('/admin/login');
}
---

<BaseLayout>
  <main class="min-h-screen bg-gray-100 py-8">
    <!-- 主要内容区域 -->
    <div id="main-content" class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Page Header -->
      <div class="flex justify-between items-center mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-900">
            Backlinks Management
          </h1>
          <p class="text-gray-600 mt-2">
            Manage backlink resources for the Featured Backlink Resources page
          </p>
        </div>
        <div class="flex space-x-3">
          <button
            id="csv-upload-btn"
            class="bg-green-600 hover:bg-green-700 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-200"
          >
            CSV批量上传
          </button>
          <button
            id="add-backlink-btn"
            class="bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-200"
          >
            Add New Backlink
          </button>
        </div>
      </div>

      <!-- Filters -->
      <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div>
            <label for="filter-search" class="block text-sm font-medium text-gray-700 mb-2">
              Search
            </label>
            <input
              type="text"
              id="filter-search"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="Search by name or description..."
            />
          </div>
          <div>
            <label for="filter-payment" class="block text-sm font-medium text-gray-700 mb-2">
              Payment Type
            </label>
            <select
              id="filter-payment"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">All Payment Types</option>
              <option value="Free">Free</option>
              <option value="Paid">Paid</option>
            </select>
          </div>
          <div>
            <label for="filter-platform" class="block text-sm font-medium text-gray-700 mb-2">
              Platform Type
            </label>
            <select
              id="filter-platform"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">All Platforms</option>
              <option value="blog">Blog</option>
              <option value="directory">Directory</option>
              <option value="content">Content</option>
              <option value="comment">Comment</option>
              <option value="social">Social</option>
            </select>
          </div>
          <div class="flex items-end">
            <button
              id="apply-filters-btn"
              class="w-full bg-gray-600 hover:bg-gray-700 text-white font-medium px-4 py-2 rounded-md transition-colors duration-200"
            >
              Apply Filters
            </button>
          </div>
        </div>
      </div>

      <!-- Backlinks Table -->
      <div class="bg-white rounded-lg shadow-sm overflow-hidden">
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Name
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Website
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  DR
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Traffic
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Payment
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Platform
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Access
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Updated
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Actions
                </th>
              </tr>
            </thead>
            <tbody id="backlinks-tbody" class="bg-white divide-y divide-gray-200">
              <!-- Table rows will be populated here -->
            </tbody>
          </table>
        </div>
      </div>

      <!-- Pagination -->
      <div class="flex items-center justify-between mt-6">
        <div class="text-sm text-gray-700">
          Showing <span id="showing-from">1</span> to <span id="showing-to">10</span> of <span id="total-items">0</span> results
        </div>
        <div class="flex space-x-2">
          <button
            id="prev-page-btn"
            class="px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
            disabled
          >
            Previous
          </button>
          <button
            id="next-page-btn"
            class="px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Next
          </button>
        </div>
      </div>
    </div>
  </main>

  <!-- Add/Edit Modal -->
  <div id="backlink-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen px-4 py-8">
      <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div class="px-6 py-4 border-b border-gray-200">
          <h3 id="modal-title" class="text-lg font-medium text-gray-900">
            Add New Backlink
          </h3>
        </div>
        
        <form id="backlink-form" class="px-8 py-6 space-y-6">
          <input type="hidden" id="backlink-id" />
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
                Name *
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            
            <div>
              <label for="websiteLink" class="block text-sm font-medium text-gray-700 mb-1">
                Website Link *
              </label>
              <input
                type="url"
                id="websiteLink"
                name="websiteLink"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
          </div>
          

          
          <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
              <label for="dr" class="block text-sm font-medium text-gray-700 mb-1">
                DR *
              </label>
              <input
                type="number"
                id="dr"
                name="dr"
                required
                min="0"
                max="100"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            
            <div>
              <label for="traffic" class="block text-sm font-medium text-gray-700 mb-1">
                Traffic *
              </label>
              <input
                type="number"
                id="traffic"
                name="traffic"
                required
                min="0"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            
            <div>
              <label for="paymentType" class="block text-sm font-medium text-gray-700 mb-1">
                Payment Type *
              </label>
              <select
                id="paymentType"
                name="paymentType"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">Select...</option>
                <option value="Free">Free</option>
                <option value="Paid">Paid</option>
              </select>
            </div>
            
            <div>
              <label for="followType" class="block text-sm font-medium text-gray-700 mb-1">
                Follow Type *
              </label>
              <select
                id="followType"
                name="followType"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">Select...</option>
                <option value="DoFollow">DoFollow</option>
                <option value="NoFollow">NoFollow</option>
              </select>
            </div>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label for="platformType" class="block text-sm font-medium text-gray-700 mb-1">
                Platform Type *
              </label>
              <select
                id="platformType"
                name="platformType"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">Select...</option>
                <option value="blog">Blog</option>
                <option value="directory">Directory</option>
                <option value="content">Content</option>
                <option value="comment">Comment</option>
                <option value="social">Social</option>
              </select>
            </div>
            
            <div>
              <label for="accessType" class="block text-sm font-medium text-gray-700 mb-1">
                Access Type *
              </label>
              <select
                id="accessType"
                name="accessType"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">Select...</option>
                <option value="guest">Guest (Free Users)</option>
                <option value="premium">Premium (Paid Users)</option>
              </select>
            </div>
            
            <div>
              <label for="submissionUrl" class="block text-sm font-medium text-gray-700 mb-1">
                Submission URL
              </label>
              <input
                type="url"
                id="submissionUrl"
                name="submissionUrl"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
          </div>
          

          

          

          

        </form>
        
        <div class="px-8 py-6 border-t border-gray-200 flex justify-end space-x-3">
          <button
            id="cancel-btn"
            type="button"
            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
          >
            Cancel
          </button>
          <button
            id="save-btn"
            type="submit"
            form="backlink-form"
            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700"
          >
            Save
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- CSV Upload Modal -->
  <div id="csv-upload-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen px-4 py-8">
      <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <div class="px-6 py-4 border-b border-gray-200">
          <h3 class="text-lg font-medium text-gray-900">
            CSV批量上传反向链接
          </h3>
        </div>
        
        <div class="px-8 py-6 space-y-6">

          <!-- 文件上传区域 -->
          <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
            <input type="file" id="csv-file-input" accept=".csv" class="hidden" />
            <div id="file-drop-zone" class="cursor-pointer">
              <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
              </svg>
              <p class="mt-2 text-sm text-gray-600">
                <span class="font-medium text-blue-600 hover:text-blue-500">点击选择文件</span> 或拖拽CSV文件到此处
              </p>
              <p class="text-xs text-gray-500">支持 .csv 格式文件</p>
            </div>
            <div id="file-info" class="hidden mt-4 p-3 bg-gray-50 rounded">
              <p class="text-sm text-gray-700">已选择文件: <span id="file-name" class="font-medium"></span></p>
              <p class="text-xs text-gray-500">文件大小: <span id="file-size"></span></p>
            </div>
          </div>
          
                  
          <!-- CSV格式说明 -->
          <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h4 class="text-sm font-medium text-blue-900 mb-2">CSV文件格式要求：</h4>
            <div class="text-sm text-blue-800 space-y-2">
              <div>
                <p class="mb-2">• 文件必须包含以下列（按顺序）：</p>
                <div class="ml-4 bg-white p-3 rounded border">
                  <div class="font-mono text-xs space-y-1">
                    <div class="flex flex-wrap gap-1">
                      <span class="bg-gray-100 px-2 py-1 rounded">name</span>
                      <span class="text-gray-400">,</span>
                      <span class="bg-gray-100 px-2 py-1 rounded">website_link</span>
                      <span class="text-gray-400">,</span>
                      <span class="bg-gray-100 px-2 py-1 rounded">dr</span>
                      <span class="text-gray-400">,</span>
                      <span class="bg-gray-100 px-2 py-1 rounded">traffic</span>
                      <span class="text-gray-400">,</span>
                    </div>
                    <div class="flex flex-wrap gap-1">
                      <span class="bg-gray-100 px-2 py-1 rounded">payment_type</span>
                      <span class="text-gray-400">,</span>
                      <span class="bg-gray-100 px-2 py-1 rounded">follow_type</span>
                      <span class="text-gray-400">,</span>
                      <span class="bg-gray-100 px-2 py-1 rounded">platform_type</span>
                      <span class="text-gray-400">,</span>
                    </div>
                    <div class="flex flex-wrap gap-1">
                      <span class="bg-gray-100 px-2 py-1 rounded">access_type</span>
                      <span class="text-gray-400">,</span>
                      <span class="bg-gray-100 px-2 py-1 rounded">submit_url</span>
                    </div>
                  </div>
                </div>
              </div>
              <div class="space-y-1">
                <p>• <strong>payment_type:</strong> Free 或 Paid</p>
                <p>• <strong>follow_type:</strong> DoFollow 或 NoFollow</p>
                <p>• <strong>platform_type:</strong> blog, directory, content, comment, social</p>
                <p>• <strong>access_type:</strong> guest 或 premium</p>
                <p>• <strong>submit_url:</strong> 可选字段</p>
              </div>
            </div>
          </div>
          

          
          <!-- 上传进度 -->
          <div id="upload-progress" class="hidden">
            <div class="bg-gray-200 rounded-full h-2">
              <div id="progress-bar" class="bg-blue-600 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
            </div>
            <p id="progress-text" class="text-sm text-gray-600 mt-2">准备上传...</p>
          </div>
        </div>
        
        <div class="px-8 py-6 border-t border-gray-200 flex justify-end space-x-3">
          <button
            id="csv-cancel-btn"
            type="button"
            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
          >
            取消
          </button>
          <button
            id="csv-upload-submit-btn"
            type="button"
            class="px-4 py-2 text-sm font-medium text-white bg-green-600 border border-transparent rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed"
            disabled
          >
            开始上传
          </button>
        </div>
      </div>
    </div>
  </div>

  <script is:inline>
    let currentPage = 1;
    // let totalPages = 1; // 未使用的变量
    let currentFilters = {};
    let editingId = null;

    // DOM elements
    const tbody = document.getElementById('backlinks-tbody');
    const modal = document.getElementById('backlink-modal');
    const modalTitle = document.getElementById('modal-title');
    
    // CSV Upload elements
    const csvModal = document.getElementById('csv-upload-modal');
    const csvFileInput = document.getElementById('csv-file-input');
    const fileDropZone = document.getElementById('file-drop-zone');
    const fileInfo = document.getElementById('file-info');
    const fileName = document.getElementById('file-name');
    const fileSize = document.getElementById('file-size');
    const uploadProgress = document.getElementById('upload-progress');
    const progressBar = document.getElementById('progress-bar');
    const progressText = document.getElementById('progress-text');
    const csvUploadBtn = document.getElementById('csv-upload-btn');
    const csvCancelBtn = document.getElementById('csv-cancel-btn');
    const csvUploadSubmitBtn = document.getElementById('csv-upload-submit-btn');
    
    let selectedFile = null;
    const form = document.getElementById('backlink-form');
    const addBtn = document.getElementById('add-backlink-btn');
    const cancelBtn = document.getElementById('cancel-btn');
    // const saveBtn = document.getElementById('save-btn'); // 未使用的变量
    const applyFiltersBtn = document.getElementById('apply-filters-btn');
    const prevPageBtn = document.getElementById('prev-page-btn');
    const nextPageBtn = document.getElementById('next-page-btn');

    // Load backlinks
    async function loadBacklinks() {
      try {
        console.log('🔄 Loading backlinks...');
        const params = new URLSearchParams({
          page: currentPage.toString(),
          limit: '20',
          premium: 'true', // Admin can see all
          ...currentFilters
        });
        
        const response = await fetch(`/api/admin/backlinks?${params}`, {
          credentials: 'include' // Include cookies for authentication
        });
        console.log('📡 API response status:', response.status);
        const result = await response.json();
        console.log('📊 API result:', result);
        
        if (result.success && result.backlinks) {
          renderBacklinks(result.backlinks);
          updatePagination(result);
        } else {
          console.error('Error loading backlinks:', result.error || 'Unknown error');
          alert('Error loading backlinks: ' + (result.error || 'Unknown error'));
        }
      } catch (error) {
        console.error('Error loading backlinks:', error);
        alert('Error loading backlinks');
      }
    }

    // Render backlinks table
    function renderBacklinks(backlinks) {
      tbody.innerHTML = '';
      
      backlinks.forEach((backlink) => {
        const row = document.createElement('tr');
        row.className = 'hover:bg-gray-50';
        
        const paymentTypeClass = {
          'Free': 'bg-green-100 text-green-800',
          'Paid': 'bg-red-100 text-red-800'
        }[backlink.payment_type] || 'bg-gray-100 text-gray-800';
        
        // const followTypeClass = {
        //   'DoFollow': 'bg-green-100 text-green-800',
        //   'NoFollow': 'bg-red-100 text-red-800'
        // }[backlink.follow_type] || 'bg-gray-100 text-gray-800'; // 未使用的变量
        
        const accessTypeClass = {
          'guest': 'bg-blue-100 text-blue-800',
          'premium': 'bg-purple-100 text-purple-800'
        }[backlink.access_type] || 'bg-gray-100 text-gray-800';
        
        row.innerHTML = `
          <td class="px-6 py-4">
            <div class="text-sm font-medium text-gray-900">${backlink.name}</div>
          </td>
          <td class="px-6 py-4">
            <a href="${backlink.website_link}" target="_blank" class="text-blue-600 hover:text-blue-800 text-sm">
              ${new URL(backlink.website_link).hostname}
            </a>
          </td>
          <td class="px-6 py-4 text-sm text-gray-900">${backlink.dr}</td>
          <td class="px-6 py-4 text-sm text-gray-900">${backlink.traffic.toLocaleString()}</td>
          <td class="px-6 py-4">
            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${paymentTypeClass}">
              ${backlink.payment_type}
            </span>
          </td>
          <td class="px-6 py-4">
            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
              ${backlink.platform_type}
            </span>
          </td>
          <td class="px-6 py-4">
            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${accessTypeClass}">
              ${backlink.access_type}
            </span>
          </td>
          <td class="px-6 py-4 text-sm text-gray-500">${new Date(backlink.updated_at).toLocaleDateString()}</td>
          <td class="px-6 py-4 text-sm font-medium space-x-2">
            <button onclick="editBacklink('${backlink.id}')" class="text-blue-600 hover:text-blue-800">Edit</button>
            <button onclick="deleteBacklink('${backlink.id}')" class="text-red-600 hover:text-red-800">Delete</button>
          </td>
        `;
        
        tbody.appendChild(row);
      });
    }

    // Update pagination
    function updatePagination(data) {
      document.getElementById('showing-from').textContent = ((data.page - 1) * data.limit + 1).toString();
      document.getElementById('showing-to').textContent = Math.min(data.page * data.limit, data.total).toString();
      document.getElementById('total-items').textContent = data.total.toString();
      
      prevPageBtn.disabled = data.page <= 1;
      nextPageBtn.disabled = !data.hasMore;
    }

    // Show modal
    function showModal(title, backlink = null) {
      modalTitle.textContent = title;
      editingId = backlink?.id || null;
      
      if (backlink) {
        // Fill form with existing data
        document.getElementById('backlink-id').value = backlink.id;
        document.getElementById('name').value = backlink.name;
        document.getElementById('websiteLink').value = backlink.websiteLink;
        document.getElementById('dr').value = backlink.dr;
        document.getElementById('traffic').value = backlink.traffic;
        document.getElementById('paymentType').value = backlink.paymentType;
        document.getElementById('followType').value = backlink.followType;
        document.getElementById('platformType').value = backlink.platformType;
        document.getElementById('accessType').value = backlink.accessType || '';
        document.getElementById('submissionUrl').value = backlink.submissionUrl || '';
      } else {
        // Clear form
        form.reset();
        document.getElementById('backlink-id').value = '';
        document.getElementById('name').value = '';
        document.getElementById('websiteLink').value = '';
        document.getElementById('dr').value = '';
        document.getElementById('traffic').value = '';
        document.getElementById('paymentType').value = '';
        document.getElementById('followType').value = '';
        document.getElementById('platformType').value = '';
        document.getElementById('accessType').value = '';
        document.getElementById('submissionUrl').value = '';
      }
      
      modal.classList.remove('hidden');
    }

    // Hide modal
    function hideModal() {
      modal.classList.add('hidden');
      editingId = null;
    }

    // Edit backlink
    window.editBacklink = async function(id) {
      try {
        const response = await fetch(`/api/admin/backlinks?backlinkId=${id}`, {
          credentials: 'include'
        });
        const result = await response.json();
        if (result.backlink) {
          const backlink = result.backlink;
          // Convert database field names to frontend format
          const formattedBacklink = {
            id: backlink.id,
            name: backlink.name,
            websiteLink: backlink.website_link,
            dr: backlink.dr,
            traffic: backlink.traffic,
            paymentType: backlink.payment_type,
            followType: backlink.follow_type,
            platformType: backlink.platform_type,
            accessType: backlink.access_type,
            submissionUrl: backlink.submit_url
          };
          showModal('Edit Backlink', formattedBacklink);
        } else {
          alert('Error loading backlink: ' + (result.error || 'Backlink not found'));
        }
      } catch (error) {
        console.error('Error loading backlink:', error);
        alert('Error loading backlink');
      }
    };

    // Delete backlink
    window.deleteBacklink = async function(id) {
      if (!confirm('Are you sure you want to delete this backlink?')) {
        return;
      }
      
      try {
        const response = await fetch('/api/admin/backlinks', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'include',
          body: JSON.stringify({
            action: 'delete',
            backlinkId: id
          })
        });
        
        if (response.ok) {
          const result = await response.json();
          if (result.success) {
            loadBacklinks();
          } else {
            alert('Error deleting backlink: ' + (result.error || 'Unknown error'));
          }
        } else {
          alert('Error deleting backlink');
        }
      } catch (error) {
        console.error('Error deleting backlink:', error);
        alert('Error deleting backlink');
      }
    };

    // CSV Upload Functions
    function showCsvModal() {
      csvModal.classList.remove('hidden');
      resetCsvUpload();
    }
    
    function hideCsvModal() {
      csvModal.classList.add('hidden');
      resetCsvUpload();
    }
    
    function resetCsvUpload() {
      selectedFile = null;
      csvFileInput.value = '';
      fileInfo.classList.add('hidden');
      uploadProgress.classList.add('hidden');
      csvUploadSubmitBtn.disabled = true;
      progressBar.style.width = '0%';
      progressText.textContent = '准备上传...';
    }
    
    function handleFileSelect(file) {
      if (!file || !file.name.toLowerCase().endsWith('.csv')) {
        alert('请选择有效的CSV文件');
        return;
      }
      
      selectedFile = file;
      fileName.textContent = file.name;
      fileSize.textContent = formatFileSize(file.size);
      fileInfo.classList.remove('hidden');
      csvUploadSubmitBtn.disabled = false;
    }
    
    function formatFileSize(bytes) {
      if (bytes === 0) return '0 Bytes';
      const k = 1024;
      const sizes = ['Bytes', 'KB', 'MB', 'GB'];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }
    
    function parseCSV(text) {
      const lines = text.split('\n').filter(line => line.trim());
      if (lines.length < 2) {
        throw new Error('CSV文件必须包含标题行和至少一行数据');
      }
      
      const headers = lines[0].split(',').map(h => h.trim());
      const expectedHeaders = ['name', 'website_link', 'dr', 'traffic', 'payment_type', 'follow_type', 'platform_type', 'access_type', 'submit_url'];
      
      // 检查必需的列
      const requiredHeaders = expectedHeaders.slice(0, 8); // 除了submit_url都是必需的
      for (const header of requiredHeaders) {
        if (!headers.includes(header)) {
          throw new Error(`缺少必需的列: ${header}`);
        }
      }
      
      const data = [];
      for (let i = 1; i < lines.length; i++) {
        const values = lines[i].split(',').map(v => v.trim());
        if (values.length < 8) continue; // 跳过不完整的行
        
        const row = {};
        headers.forEach((header, index) => {
          if (expectedHeaders.includes(header)) {
            row[header] = values[index] || '';
          }
        });
        
        // 验证数据类型
        if (row.dr) row.dr = parseInt(row.dr) || 0;
        if (row.traffic) row.traffic = parseInt(row.traffic) || 0;
        
        // 验证枚举值
        if (row.payment_type && !['Free', 'Paid'].includes(row.payment_type)) {
          throw new Error(`第${i+1}行: payment_type必须是Free或Paid`);
        }
        if (row.follow_type && !['DoFollow', 'NoFollow'].includes(row.follow_type)) {
          throw new Error(`第${i+1}行: follow_type必须是DoFollow或NoFollow`);
        }
        if (row.platform_type && !['blog', 'directory', 'content', 'comment', 'social'].includes(row.platform_type)) {
          throw new Error(`第${i+1}行: platform_type必须是blog, directory, content, comment或social之一`);
        }
        if (row.access_type && !['guest', 'premium'].includes(row.access_type)) {
          throw new Error(`第${i+1}行: access_type必须是guest或premium`);
        }
        
        data.push(row);
      }
      
      return data;
    }
    
    async function uploadCSVData() {
      if (!selectedFile) return;
      
      try {
        uploadProgress.classList.remove('hidden');
        progressText.textContent = '正在读取文件...';
        progressBar.style.width = '10%';
        
        const text = await selectedFile.text();
        progressText.textContent = '正在解析CSV数据...';
        progressBar.style.width = '30%';
        
        const data = parseCSV(text);
        progressText.textContent = `解析完成，准备上传${data.length}条记录...`;
        progressBar.style.width = '50%';
        
        // 批量上传数据
        const batchSize = 10; // 每批处理10条记录
        let uploaded = 0;
        let failed = 0;
        
        for (let i = 0; i < data.length; i += batchSize) {
          const batch = data.slice(i, i + batchSize);
          progressText.textContent = `正在上传第${i + 1}-${Math.min(i + batchSize, data.length)}条记录...`;
          
          try {
            const response = await fetch('/api/admin/backlinks', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              credentials: 'include',
              body: JSON.stringify({
                action: 'batch_create',
                data: batch
              })
            });
            
            const result = await response.json();
            if (result.success) {
              uploaded += result.created || batch.length;
            } else {
              failed += batch.length;
              console.error('批量上传失败:', result.error);
            }
          } catch (error) {
            failed += batch.length;
            console.error('批量上传错误:', error);
          }
          
          const progress = Math.min(50 + ((i + batchSize) / data.length) * 50, 100);
          progressBar.style.width = progress + '%';
        }
        
        progressBar.style.width = '100%';
        progressText.textContent = `上传完成！成功: ${uploaded}条，失败: ${failed}条`;
        
        setTimeout(() => {
          hideCsvModal();
          loadBacklinks(); // 刷新列表
          if (failed > 0) {
            alert(`CSV上传完成！\n成功上传: ${uploaded}条\n失败: ${failed}条\n请检查控制台了解失败详情。`);
          } else {
            alert(`CSV上传成功！共上传${uploaded}条记录。`);
          }
        }, 2000);
        
      } catch (error) {
        console.error('CSV上传错误:', error);
        progressText.textContent = '上传失败: ' + error.message;
        progressBar.style.width = '0%';
        alert('CSV上传失败: ' + error.message);
      }
    }

    // Event listeners
    addBtn.addEventListener('click', () => showModal('Add New Backlink'));
    cancelBtn.addEventListener('click', hideModal);
    
    // CSV Upload Event Listeners
    csvUploadBtn.addEventListener('click', showCsvModal);
    csvCancelBtn.addEventListener('click', hideCsvModal);
    csvUploadSubmitBtn.addEventListener('click', uploadCSVData);
    
    // File input change
    csvFileInput.addEventListener('change', (e) => {
      if (e.target.files.length > 0) {
        handleFileSelect(e.target.files[0]);
      }
    });
    
    // File drop zone events
    fileDropZone.addEventListener('click', () => {
      csvFileInput.click();
    });
    
    fileDropZone.addEventListener('dragover', (e) => {
      e.preventDefault();
      fileDropZone.classList.add('border-blue-400', 'bg-blue-50');
    });
    
    fileDropZone.addEventListener('dragleave', (e) => {
      e.preventDefault();
      fileDropZone.classList.remove('border-blue-400', 'bg-blue-50');
    });
    
    fileDropZone.addEventListener('drop', (e) => {
      e.preventDefault();
      fileDropZone.classList.remove('border-blue-400', 'bg-blue-50');
      
      const files = e.dataTransfer.files;
      if (files.length > 0) {
        handleFileSelect(files[0]);
      }
    });
    
    // Close CSV modal when clicking outside
    csvModal.addEventListener('click', (e) => {
      if (e.target === csvModal) {
        hideCsvModal();
      }
    });
    
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const data = {
        name: formData.get('name'),
        website_link: formData.get('websiteLink'),
        dr: parseInt(formData.get('dr')),
        traffic: parseInt(formData.get('traffic')),
        payment_type: formData.get('paymentType'),
        follow_type: formData.get('followType'),
        platform_type: formData.get('platformType'),
        access_type: formData.get('accessType'),
        submit_url: formData.get('submissionUrl') || undefined
      };
      
      try {
        const response = await fetch('/api/admin/backlinks', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'include',
          body: JSON.stringify({
            action: editingId ? 'update' : 'create',
            backlinkId: editingId || undefined,
            data: data
          })
        });
        
        if (response.ok) {
          const result = await response.json();
          if (result.success) {
            hideModal();
            loadBacklinks();
          } else {
            alert('Error saving backlink: ' + (result.error || 'Unknown error'));
          }
        } else {
          alert('Error saving backlink');
        }
      } catch (error) {
        console.error('Error saving backlink:', error);
        alert('Error saving backlink');
      }
    });

    applyFiltersBtn.addEventListener('click', () => {
      currentFilters = {
        search: document.getElementById('filter-search').value || undefined,
        paymentType: document.getElementById('filter-payment').value || undefined,
        platformType: document.getElementById('filter-platform').value || undefined
      };
      currentPage = 1;
      loadBacklinks();
    });

    prevPageBtn.addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        loadBacklinks();
      }
    });

    nextPageBtn.addEventListener('click', () => {
      currentPage++;
      loadBacklinks();
    });

    // Close modal when clicking outside
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        hideModal();
      }
    });

    // 认证已在服务器端完成，无需客户端检查
    
    // 登出函数
    window.logout = function() {
      if (confirm('确定要退出登录吗？')) {
        localStorage.removeItem('adminLoggedIn');
        localStorage.removeItem('adminUsername');
        localStorage.removeItem('adminLoginTime');
        window.location.href = '/admin/login';
      }
    };
    
    // 页面加载时初始化
    document.addEventListener('DOMContentLoaded', function() {
      // 初始化页面数据
      loadBacklinks();
    });
  </script>
</BaseLayout>